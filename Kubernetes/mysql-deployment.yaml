apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mysql-master
  labels:
    app: wordpress
    tier: mysql
    role: master
spec:
  serviceName: mysql-master
  replicas: 1
  selector:
    matchLabels:
      app: wordpress
      tier: mysql
      role: master
  template:
    metadata:
      labels:
        app: wordpress
        tier: mysql
        role: master
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: topology.kubernetes.io/zone
                    operator: In
                    values:
                      - eu-west-3a
      containers:
        - name: mysql
          image: bitnami/mysql:8.0
          imagePullPolicy: IfNotPresent
          env:
            - name: MYSQL_REPLICATION_MODE
              value: master
            - name: MYSQL_REPLICATION_USER
              value: repl_user
            - name: MYSQL_REPLICATION_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-pass
                  key: replication_password
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-pass
                  key: password
            - name: MYSQL_DATABASE
              value: wordpress
            - name: MYSQL_USER
              value: wordpress
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-pass
                  key: password
          ports:
            - containerPort: 3306
              name: mysql
          volumeMounts:
            - name: mysql-data
              mountPath: /bitnami/mysql
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-master-pvc
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: gp3  # Updated storage class if available
  resources:
    requests:
      storage: 10Gi
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mysql-slave
  labels:
    app: wordpress
    tier: mysql
    role: slave
spec:
  serviceName: mysql-slave
  replicas: 1  # Increase this number for additional slaves
  selector:
    matchLabels:
      app: wordpress
      tier: mysql
      role: slave
  template:
    metadata:
      labels:
        app: wordpress
        tier: mysql
        role: slave
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: topology.kubernetes.io/zone
                    operator: In
                    values:
                      - eu-west-3b
      containers:
        - name: mysql
          image: bitnami/mysql:8.0
          imagePullPolicy: IfNotPresent
          env:
            - name: MYSQL_REPLICATION_MODE
              value: slave
            - name: MYSQL_REPLICATION_USER
              value: repl_user
            - name: MYSQL_REPLICATION_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-pass
                  key: replication_password
            - name: MYSQL_MASTER_HOST
              value: mysql-master-0.mysql-master
            - name: MYSQL_MASTER_PORT_NUMBER
              value: "3306"
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-pass
                  key: password
          ports:
            - containerPort: 3306
              name: mysql
          volumeMounts:
            - name: mysql-data
              mountPath: /bitnami/mysql
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-slave-pvc
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: gp3  # Updated storage class if available
  resources:
    requests:
      storage: 10Gi
