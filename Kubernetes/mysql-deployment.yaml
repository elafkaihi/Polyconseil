apiVersion: v1
kind: Service
metadata:
  name: mysql-master
  labels:
    app: wordpress
    tier: mysql
    role: master
spec:
  ports:
    - port: 3306
  selector:
    app: wordpress
    tier: mysql
    role: master
  clusterIP: None
---
apiVersion: v1
kind: Service
metadata:
  name: mysql-slave
  labels:
    app: wordpress
    tier: mysql
    role: slave
spec:
  ports:
    - port: 3306
  selector:
    app: wordpress
    tier: mysql
    role: slave
  clusterIP: None
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql-config
data:
  primary.cnf: |
    [mysqld]
    log-bin=mysql-bin
    binlog-format=ROW
    server-id=1
    log_slave_updates=1
    gtid_mode=ON
    enforce-gtid-consistency=ON
  replica.cnf: |
    [mysqld]
    server-id=2
    super-read-only=1
    log_slave_updates=1
    gtid_mode=ON
    enforce-gtid-consistency=ON
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: wordpress-mysql
  labels:
    app: wordpress
    tier: mysql
spec:
  selector:
    matchLabels:
      app: wordpress
      tier: mysql
  serviceName: mysql-master
  replicas: 2
  template:
    metadata:
      labels:
        app: wordpress
        tier: mysql
    spec:
      initContainers:
      - name: init-mysql
        image: mysql:8.0
        command:
        - bash
        - "-c"
        - |
          set -ex
          [[ $HOSTNAME =~ -([0-9]+)$ ]] || exit 1
          ordinal=${BASH_REMATCH[1]}
          if [[ $ordinal -eq 0 ]]; then
            cp /mnt/config-map/primary.cnf /etc/mysql/conf.d/mysql.cnf
            echo "Configuring as Master"
          else
            cp /mnt/config-map/replica.cnf /etc/mysql/conf.d/mysql.cnf
            echo "Configuring as Slave"
          fi
        volumeMounts:
        - name: conf
          mountPath: /etc/mysql/conf.d
        - name: config-map
          mountPath: /mnt/config-map
      containers:
      - name: mysql
        image: mysql:8.0
        env:
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-pass
              key: password
        - name: MYSQL_DATABASE
          value: wordpress
        - name: MYSQL_USER
          value: wordpress
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-pass
              key: password
        - name: MYSQL_REPLICATION_USER
          value: replication
        - name: MYSQL_REPLICATION_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-pass
              key: replication_password
        ports:
        - name: mysql
          containerPort: 3306
        volumeMounts:
        - name: mysql-data
          mountPath: /var/lib/mysql
        - name: conf
          mountPath: /etc/mysql/conf.d
        resources:
          requests:
            cpu: "500m"
            memory: "1Gi"
          limits:
            cpu: "1"
            memory: "2Gi"
        livenessProbe:
          exec:
            command: ["mysqladmin", "ping"]
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
        readinessProbe:
          exec:
            command: ["mysql", "-h", "127.0.0.1", "-e", "SELECT 1"]
          initialDelaySeconds: 5
          periodSeconds: 2
          timeoutSeconds: 1
      volumes:
      - name: conf
        emptyDir: {}
      - name: config-map
        configMap:
          name: mysql-config
  volumeClaimTemplates:
  - metadata:
      name: mysql-data
    spec:
      accessModes: ["ReadWriteOnce"]
      storageClassName: efs-sc
      resources:
        requests:
          storage: 10Gi